{"version":3,"sources":["Components/configComponents/creation-form/checkbox-items.js","Components/configComponents/creation-form/range-addition.js","Components/configComponents/creation-form/creation-form.js","Components/configComponents/configured-checkbox/configured-checkbox.js","Components/configComponents/rangeForConfig.js","Components/configComponents/created-component/created-component.js","Layouts/config.js","Components/previwComponents/input/input.js","Components/previwComponents/checkbox/checkbox.js","Components/previwComponents/Range/range.js","Layouts/preview.js","App.js","redux/actions.js","redux/helpers.js","redux/reducer.js","redux/store.js","index.js"],"names":["CheckboxItems","state","IDs","onHandlePlus","newIndex","length","setState","props","onAddingOption","className","this","map","id","key","onClick","Component","RangeAddition","min","max","onInputChange","event","name","target","value","newObj","parseInt","onChangeRange","type","onChange","CreationForm","options","range","addComponent","alert","newValue","newRange","placeholder","ConfiguredCheckbox","changeConfig","option","RangeForConfig","CreatedComponent","Config","data","changeConfiguration","components","component","Input","label","Checkbox","selectedIndex","onSelectOption","index","Range","Preview","App","componentsConfig","componentsPreview","connect","store","dispatch","payload","getNewArr","arr","objectId","newData","searchedObj","filter","item","initialState","reducer","action","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faf3a906.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./checkbox-items.css\"\r\n\r\nclass CheckboxItems extends Component {\r\n    state = {\r\n        IDs: [1]\r\n    };\r\n    onHandlePlus = () => {\r\n        let newIndex = this.state.IDs.length + 1;\r\n        this.setState(state => {\r\n            return {\r\n                IDs: [...state.IDs, newIndex]\r\n            }\r\n        });\r\n        this.props.onAddingOption(newIndex)\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='items-container'>\r\n                {this.state.IDs.map(id => <button key={'item' + id} className='option'>option {id}</button>)}\r\n                <i className=\"far fa-plus-square\" onClick={() => this.onHandlePlus()}></i>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckboxItems;","import React, {Component} from 'react';\r\nimport \"./range-addition.css\"\r\n\r\nclass RangeAddition extends Component {\r\n    state = {\r\n        min: 0,\r\n        max: 100\r\n    };\r\n    onInputChange = (event) => {\r\n\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        let newObj = this.state;\r\n        newObj[name] = parseInt(value);\r\n        this.props.onChangeRange(newObj);\r\n        this.setState({[name]: +value});\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='range-addition'>\r\n                <div className='row'>\r\n                    <span>min</span>\r\n                    <input name='min' type=\"text\" onChange={(event) => this.onInputChange(event)}/>\r\n                </div>\r\n                <div className='row'>\r\n                    <span>max</span>\r\n                    <input name='max' type=\"text\" onChange={(event) => this.onInputChange(event)}/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeAddition;","import React, {Component} from 'react';\r\nimport \"./creation-form.css\"\r\nimport CheckboxItems from \"./checkbox-items\";\r\nimport RangeAddition from \"./range-addition\";\r\n\r\nclass CreationForm extends Component {\r\n    state = {\r\n        type: 'text',\r\n        value: '',\r\n        id: 0,\r\n        options: [1],\r\n        range: {\r\n            min: 0,\r\n            max: 100\r\n        }\r\n    };\r\n    onInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({[name]: value})\r\n    };\r\n\r\n\r\n    addComponent = () => {\r\n        if (this.state.value !== '') {\r\n            this.props.addComponent({\r\n                id: this.state.id,\r\n                value: this.state.value,\r\n                type: this.state.type,\r\n                options: this.state.options,\r\n                range: this.state.range\r\n            });\r\n            this.setState(state => {\r\n                return {\r\n                    type: 'text',\r\n                    value: '',\r\n                    id: ++state.id,\r\n                    options: [1]\r\n                }\r\n            });\r\n\r\n        } else {\r\n            alert('fill all fields')\r\n        }\r\n    };\r\n    onAddingOption = (newValue) => {\r\n        this.setState(state => {\r\n                return {\r\n                    options: [...state.options, newValue]\r\n                }\r\n            }\r\n        )\r\n    };\r\n    onChangeRange = (newRange) => {\r\n        this.setState({range: newRange})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='creation-form'>\r\n                <select name=\"type\" id=\"\" value={this.state.type} className='creation-input select'\r\n                        onChange={(event => this.onInputChange(event))}>\r\n                    <option value=\"text\">Text</option>\r\n                    <option value=\"password\">Password</option>\r\n                    <option value=\"checkbox\">Checkbox</option>\r\n                    <option value=\"range\">Range</option>\r\n                </select>\r\n                <input type=\"text\" value={this.state.value} name='value' placeholder='Message'\r\n                       className='creation-input'\r\n                       onChange={(event => this.onInputChange(event))}/>\r\n                {this.state.type === 'checkbox' && <CheckboxItems onAddingOption={this.onAddingOption}/>}\r\n                {this.state.type === 'range' && <RangeAddition onChangeRange={this.onChangeRange}/>}\r\n                <button type='button' className='add-btn' onClick={() => this.addComponent()}>Add component</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreationForm;","import React, {Component} from 'react';\r\nimport \"../creation-form/checkbox-items.css\"\r\n\r\nclass ConfiguredCheckbox extends Component {\r\n    state = {\r\n        options: this.props.options\r\n    };\r\n    onHandlePlus = () => {\r\n        let newIndex = this.state.options.length + 1;\r\n        this.props.changeConfig({type: 'options', value: [...this.state.options, newIndex]}, this.props.id);\r\n        this.setState(state => {\r\n            return {\r\n                options: [...state.options, newIndex]\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='items-container'>\r\n                {this.state.options.map(option => <button key={'configured' + option}\r\n                                                          className='option'>option {option}</button>)}\r\n                <i className=\"far fa-plus-square\" onClick={() => this.onHandlePlus()}></i>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfiguredCheckbox;","import React, {Component} from 'react';\r\n\r\nclass RangeForConfig extends Component {\r\n    state = {\r\n        min: this.props.range.min,\r\n        max: this.props.range.max\r\n    };\r\n    onInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({[name]: +value});\r\n        let newObj = this.state;\r\n        newObj[name] = parseInt(value);\r\n        this.props.changeConfig({type: 'range', value: newObj}, this.props.id);\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='range-addition'>\r\n                <div className='row'>\r\n                    <span>min</span>\r\n                    <input name='min' type=\"text\" value={this.state.min}\r\n                           onChange={(event) => this.onInputChange(event)}/>\r\n                </div>\r\n                <div className='row'>\r\n                    <span>max</span>\r\n                    <input name='max' type=\"text\" value={this.state.max}\r\n                           onChange={(event) => this.onInputChange(event)}/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RangeForConfig;","import React, {Component} from 'react';\r\nimport ConfiguredCheckbox from \"../configured-checkbox/configured-checkbox\";\r\nimport \"./created-component.css\"\r\nimport RangeForConfig from \"../rangeForConfig\";\r\n\r\nclass CreatedComponent extends Component {\r\n    state = {\r\n        type: this.props.type,\r\n        value: this.props.value,\r\n        options: this.props.options,\r\n        range: this.props.range\r\n    };\r\n    onInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({[name]: value});\r\n        this.props.changeConfig({type: name, value: value}, this.props.id);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='created-component'>\r\n                <select name=\"type\" id=\"\" value={this.state.type} className='creation-input select'\r\n                        onChange={(event => {\r\n                            this.onInputChange(event);\r\n                        })}>\r\n                    <option value=\"text\">Text</option>\r\n                    <option value=\"password\">Password</option>\r\n                    <option value=\"checkbox\">Checkbox</option>\r\n                    <option value=\"range\">Range</option>\r\n                </select>\r\n                <input type=\"text\" value={this.state.value} name='value' placeholder='Message'\r\n                       className='creation-input'\r\n                       onChange={(event => {\r\n                           this.onInputChange(event);\r\n                       })}/>\r\n                {this.state.type === 'checkbox' && <ConfiguredCheckbox options={this.props.options} id={this.props.id}\r\n                                                                       changeConfig={this.props.changeConfig}/>}\r\n                {this.state.type === 'range' && <RangeForConfig range={this.props.range}\r\n                                                                id={this.props.id}\r\n                                                                changeConfig={this.props.changeConfig}/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreatedComponent;","import React, {Component} from 'react';\r\nimport CreationForm from \"../Components/configComponents/creation-form/creation-form\";\r\nimport CreatedComponent from \"../Components/configComponents/created-component/created-component\";\r\n\r\nclass Config extends Component {\r\n\r\n    render() {\r\n\r\n        const {addComponent, data, changeConfiguration} = this.props;\r\n        return (\r\n            <div className='layout'>\r\n                <h3 className='layout-header'>Components configuration</h3>\r\n                {components(data, changeConfiguration)}\r\n                <CreationForm addComponent={addComponent}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst components = (data, changeConfig) => {\r\n    return data.map(component => {\r\n        switch (component.type) {\r\n            case 'text':\r\n                return <CreatedComponent key={component.value + component.type + component.id}\r\n                                         id={component.id}\r\n                                         options={component.options}\r\n                                         range={component.range}\r\n                                         changeConfig={changeConfig} type='text' value={component.value}/>;\r\n            case 'password':\r\n                return <CreatedComponent\r\n                    key={component.value + component.type + component.id}\r\n                    id={component.id}\r\n                    options={component.options}\r\n                    range={component.range}\r\n                    changeConfig={changeConfig} type='password' value={component.value}/>;\r\n            case 'checkbox':\r\n                return <CreatedComponent\r\n                    changeConfig={changeConfig}\r\n                    id={component.id}\r\n                    range={component.range}\r\n                    type='checkbox' value={component.value} options={component.options}/>;\r\n            case 'range':\r\n                return <CreatedComponent changeConfig={changeConfig}\r\n                                         id={component.id}\r\n                                         type={'range'}\r\n                                         range={component.range}\r\n                                         value={component.value}/>;\r\n            default :\r\n                return null\r\n        }\r\n    })\r\n};\r\n\r\nexport default Config;\r\n\r\n//","import React, {Component} from \"react\";\r\nimport \"./input.css\"\r\n\r\nclass Input extends Component {\r\n\r\n    render() {\r\n        const {label, type} = this.props;\r\n        return (\r\n            <div className='input-component'>\r\n                <span>{label}</span>\r\n                <input type={type}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Input;\r\n","import React, {Component} from 'react';\r\nimport \"./checkbox.css\"\r\n\r\nclass Checkbox extends Component {\r\n    state = {\r\n        selectedIndex : 0\r\n    };\r\n\r\n    onSelectOption = (id)=>{\r\n      this.setState({selectedIndex : id})\r\n    };\r\n    render() {\r\n        const {options,label} = this.props;\r\n        return (\r\n            <div className='checkbox'>\r\n                <span>{label}</span>\r\n                <div className='checkbox-container'>\r\n                    {options.map((value,index)=>\r\n                    {\r\n                        let className = 'option';\r\n                        if(index===this.state.selectedIndex){\r\n                            className += ' selected';\r\n                        }\r\n\r\n                       return <button  name={value} className={className}\r\n                                      onClick={(event)=>this.onSelectOption(+event.target.name-1)}>option {value}</button>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React, {Component} from 'react';\r\nimport \"./range.css\"\r\n\r\n\r\nclass Range extends Component {\r\n    state ={\r\n        value : 1\r\n    };\r\n    onInputChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        this.setState({[name]: +value});\r\n    };\r\n    render() {\r\n        const {min,max,label}=this.props;\r\n        return (\r\n            <div className='range'>\r\n                <span className='range-header'>{label}</span>\r\n                <input name='value' value={this.state.value} min={min} max={max} type=\"range\" onChange={(event)=>this.onInputChange(event)}/>\r\n                <span>value : {this.state.value}</span>\r\n                <span>min : {min}</span>\r\n                <span>max : {max}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Range;","import React, {Component} from 'react';\r\nimport Input from \"../Components/previwComponents/input/input\";\r\nimport Checkbox from \"../Components/previwComponents/checkbox/checkbox\";\r\nimport \"./layout.css\"\r\nimport Range from \"../Components/previwComponents/Range/range\";\r\n\r\nclass Preview extends Component {\r\n    render() {\r\n        const {data} = this.props;\r\n        return (\r\n            <div className='layout'>\r\n                <h3 className='layout-header'>Components preview</h3>\r\n                {components(data)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst components = (data) => {\r\n    return data.map(component => {\r\n        switch (component.type) {\r\n            case 'text':\r\n                return <Input key={component.value + component.id}\r\n                              type='text' label={component.value}/>;\r\n            case 'password':\r\n                return <Input key={component.value + component.id}\r\n                              type='password' label={component.value}/>;\r\n            case 'checkbox':\r\n                return <Checkbox label = {component.value} options={component.options}/>;\r\n            case 'range':\r\n                return <Range type='range'\r\n                              label = {component.value}\r\n                              min={component.range.min}\r\n                              max={component.range.max}/>;\r\n            default :\r\n                return null\r\n        }\r\n    })\r\n};\r\n\r\nexport default Preview;","import React, {Component} from 'react';\r\nimport Config from \"./Layouts/config\";\r\nimport Preview from \"./Layouts/preview\";\r\nimport \"./index.css\"\r\nimport {connect} from \"react-redux\"\r\nimport {addComponent,changeConfiguration} from \"./redux/actions\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        const {addComponent,changeConfiguration} = this.props;\r\n        return (\r\n\r\n            <div className='app'>\r\n                <Config addComponent={addComponent} data = {this.props.componentsConfig} changeConfiguration={changeConfiguration}/>\r\n                <Preview data = {this.props.componentsPreview}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addComponent: data => dispatch(addComponent(data)),\r\n        changeConfiguration: (data,id) => dispatch(changeConfiguration(data,id))\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (store)=>{\r\n    return{\r\n        componentsConfig : store.componentsConfig,\r\n        componentsPreview : store.componentsPreview\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","export const ADD_COMPONENT = 'ADD_COMPONENT';\r\nexport const CHANGE_CONFIGURATION = 'CHANGE_CONFIGURATION';\r\n\r\nexport const addComponent =(data)=>{\r\n    return{\r\n        type : ADD_COMPONENT,\r\n        payload : data\r\n    }\r\n};\r\nexport const changeConfiguration=(data,id)=>{\r\n    return {\r\n        type : CHANGE_CONFIGURATION,\r\n        payload :data,\r\n        id,\r\n    }\r\n};","\r\nexport const getNewArr = (arr,objectId,newData)=> {\r\n    let searchedObj = arr.filter(component => component.id === objectId)[0];\r\n    let newObj = {\r\n        id : objectId,\r\n        type : searchedObj.type,\r\n        value : searchedObj.value,\r\n        options : searchedObj.options,\r\n        range: searchedObj.range\r\n    };\r\n    newObj[newData.type] = newData.value;\r\n    return arr.map(item => {\r\n        if (item.id === objectId) {\r\n            return newObj;\r\n        } else return item;\r\n    });\r\n};","import {ADD_COMPONENT, CHANGE_CONFIGURATION} from \"./actions\";\r\nimport {getNewArr} from \"./helpers\";\r\n\r\nconst initialState = {\r\n    newObj: {},\r\n    componentsConfig: [],\r\n    componentsPreview : []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_COMPONENT:\r\n            return {\r\n                ...state, componentsConfig:\r\n                    [...state.componentsConfig, action.payload],\r\n                componentsPreview:\r\n                    [...state.componentsPreview, action.payload]\r\n            };\r\n        case CHANGE_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                componentsPreview: [...getNewArr(state.componentsPreview, action.id, action.payload)]\r\n            };\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\nexport default reducer;\r\n","import {createStore} from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\nexport default store;\r\n//,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\"\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}